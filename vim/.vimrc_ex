set nocompatible
filetype off

" Setting up Vundle - the vim plugin bundler

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Add your bundles here

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'
Bundle 'tpope/vim-fugitive'

Bundle 'jpalardy/vim-slime'
Bundle 'scrooloose/nerdtree'
Bundle 'tpope/vim-surround'
Bundle 'vim-scripts/FuzzyFinder'
"Bundle 'vim-scripts/L9'

Bundle 'othree/html5.vim'
Bundle 'gregsexton/MatchTag'
Bundle 'hail2u/vim-css3-syntax'
Bundle 'lukaszb/vim-web-indent'
Bundle 'walm/jshint.vim'

Bundle 'miripiruni/CSScomb-for-Vim'

" HTML/HAML
Bundle 'hokaccha/vim-html5validator'

" https://github.com/marijnh/tern_for_vim
Bundle 'marijnh/tern_for_vim'

" CSS/LESS
" JavaScript
Bundle 'pangloss/vim-javascript'
Bundle 'itspriddle/vim-jquery'
" JSON
Bundle 'leshill/vim-json'

" Setting up Vundle - the vim plugin bundler end
filetype plugin indent on
syntax on

" Buffer options
set hidden                  " hide buffers when they are abandoned
set autoread                " auto reload changed files

" Display options
set title                   " show file name in window title
set virtualedit=all
set novisualbell            " mute error bell
set nowrap
set linebreak               " break lines by words
set list listchars=tab:▸-,eol:¬,extends:☠,precedes:❤
" set scrolloff=4           " min 4 symbols below cursor
set nu
set scrolljump=5
set sidescroll=4
set sidescrolloff=10
set showcmd
set whichwrap=b,s,<,>,[,],l,h
set completeopt=menu,preview
set infercase
set ruler
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%)
set ttyfast                 " Optimize for fast terminal connections
set shortmess=atI           " Don’t show the intro message when starting Vim


" Tab options
set autoindent              " copy indent from previous line
set smartindent             " enable nice indent
set expandtab               " tab with spaces
set smarttab                " indent using shiftwidth"
set shiftwidth=4          " number of spaces to use for each step of indent
set tabstop=8
set softtabstop=8           " tab like 4 spaces
set shiftround              " drop unused spaces

" Search options
set gdefault                " Add the g flag to search/replace by default
set hlsearch                " Highlight search results
set ignorecase              " Ignore case in search patterns
set smartcase               " Override the 'ignorecase' option if the search pattern contains upper case characters
set incsearch               " While typing a search command, show where the pattern
nnoremap <silent> <cr> :nohlsearch<cr><cr>

" Matching characters
set showmatch               " Show matching brackets
set matchpairs+=<:>         " Make < and > match as well

" Localization
set langmenu=none            " Always use english menu
set nospell
set spelllang=en          " Languages
set encoding=utf-8           " Default encoding
set termencoding=utf-8
set fileformat=unix

" Wildmenu
set wildmenu                " use wildmenu ...
set wildcharm=<TAB>

if has("gui_running") 
    set lines=999 columns=999 
endif 


" Folding
if has('folding')
    set foldmethod=indent
    set foldlevel=99
    " toggle folds with space
    nmap <space> za
endif


colorscheme desert
set guioptions-=T " Removes top toolbar
set guioptions-=r " Removes right hand scroll bar
set go-=L " Removes left hand scroll bar
" FuzzyFinder
let g:fuf_file_exclude = '\v\~$|\.(o|exe|dll|bak|orig|swp|pyc|jpg|png|gif|svg)$|(^|[/\\])(\.(hg|git|bzr)|tmp)($|[/\\])'
nnoremap <silent> <c-b> :FufBuffer<CR>
nnoremap <silent> <c-t> :FufFile **/<CR>

" NERDTree
let NERDTreeShowHidden=0
let g:NERDTreeWinPos = "right"
nmap <silent> <leader>t :NERDTreeToggle<CR>
nmap <silent> <leader>f :NERDTreeFind<CR>

" fugitive
autocmd BufReadPost fugitive://* set bufhidden=delete
nmap <silent> <leader>b :.Gblame<cr>
vmap <silent> <leader>b :Gblame<cr>
nmap <silent> <leader>g :Gstatus<cr>
nmap <silent> <leader>w :Gwrite<cr>


nmap <leader>j :JSHint<cr>

" Open files
" Do not set autochdir (working dir should be root)
nnoremap <leader>e :e <c-r>=expand("%:h")<cr>/
nnoremap <leader>d :diffsplit <c-r>=expand("%:h")<cr>/
cmap <leader>e <c-r>=expand("%:h")<cr>/

map <F2> :mksession! ~/.vim_session <cr> " Quick write session with F2
map <F3> :source ~/.vim_session <cr>     " And load session with F3
